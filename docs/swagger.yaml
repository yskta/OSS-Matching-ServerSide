basePath: /api
definitions:
  OSS-Matching-ServerSide_internal_controller_dto.CreateProjectRequest:
    properties:
      description:
        type: string
      github_repo_id:
        type: string
      name:
        type: string
    required:
    - github_repo_id
    - name
    type: object
  OSS-Matching-ServerSide_internal_controller_dto.CreateUserRequest:
    properties:
      email:
        type: string
      github_id:
        type: string
      name:
        type: string
    required:
    - email
    - github_id
    - name
    type: object
  OSS-Matching-ServerSide_internal_controller_dto.ProjectResponse:
    properties:
      created_at:
        type: string
      description:
        type: string
      github_repo_id:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      name:
        type: string
      updated_at:
        type: string
    type: object
  OSS-Matching-ServerSide_internal_controller_dto.UpdateProjectRequest:
    properties:
      description:
        type: string
      name:
        type: string
    required:
    - name
    type: object
  OSS-Matching-ServerSide_internal_controller_dto.UpdateUserRequest:
    properties:
      email:
        type: string
      name:
        type: string
    required:
    - email
    - name
    type: object
  OSS-Matching-ServerSide_internal_controller_dto.UserResponse:
    properties:
      created_at:
        type: string
      email:
        type: string
      github_id:
        type: string
      id:
        type: string
      name:
        type: string
      updated_at:
        type: string
    type: object
  echo.HTTPError:
    properties:
      message: {}
    type: object
host: localhost:8080
info:
  contact: {}
  description: API for OSS Matching Service
  title: OSS Matching API
  version: "1.0"
paths:
  /projects:
    post:
      consumes:
      - application/json
      description: Register a GitHub repository as a project
      parameters:
      - description: Project creation request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/OSS-Matching-ServerSide_internal_controller_dto.CreateProjectRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/OSS-Matching-ServerSide_internal_controller_dto.ProjectResponse'
        "400":
          description: Invalid request format
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Create a new project
      tags:
      - projects
  /projects/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a project by ID
      parameters:
      - description: Project ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid ID format
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Project not found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Delete project
      tags:
      - projects
    get:
      consumes:
      - application/json
      description: Get project information by project ID
      parameters:
      - description: Project ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/OSS-Matching-ServerSide_internal_controller_dto.ProjectResponse'
        "400":
          description: Invalid ID format
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Project not found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Get project by ID
      tags:
      - projects
    put:
      consumes:
      - application/json
      description: Update project information
      parameters:
      - description: Project ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: Project update request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/OSS-Matching-ServerSide_internal_controller_dto.UpdateProjectRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/OSS-Matching-ServerSide_internal_controller_dto.ProjectResponse'
        "400":
          description: Invalid request format or ID
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Project not found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Update project
      tags:
      - projects
  /users:
    post:
      consumes:
      - application/json
      description: Create a new user with GitHub account
      parameters:
      - description: User creation request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/OSS-Matching-ServerSide_internal_controller_dto.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/OSS-Matching-ServerSide_internal_controller_dto.UserResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Create a new user
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user by ID
      parameters:
      - description: User ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid ID format
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Delete user
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Get a user's detailed information by their ID
      parameters:
      - description: User ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/OSS-Matching-ServerSide_internal_controller_dto.UserResponse'
        "400":
          description: Invalid ID format
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Get a user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update user information
      parameters:
      - description: User ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: User update request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/OSS-Matching-ServerSide_internal_controller_dto.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/OSS-Matching-ServerSide_internal_controller_dto.UserResponse'
        "400":
          description: Invalid request format or ID
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Update user
      tags:
      - users
swagger: "2.0"
